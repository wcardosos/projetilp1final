#BlueJ class context
comment0.target=Casa
comment0.text=\r\n\ Representa\ uma\ Casa\ do\ tabuleiro.\r\n\ Possui\ uma\ posi\u00E7\u00E3o\ (i,j)\ e\ pode\ conter\ uma\ Pe\u00E7a.\r\n\ \r\n\ @author\ Alan\ Moraes\ &lt;alan@ci.ufpb.br&gt;\r\n\ @author\ Leonardo\ Villeth\ &lt;lvilleth@cc.ci.ufpb.br&gt;\r\n\ @author\ Wagner\ Cardoso\ &lt;wagnersilva@cc.ci.ufpb.br&gt;\r\n
comment1.params=x\ y
comment1.target=Casa(int,\ int)
comment2.params=casaVerificacao
comment2.target=boolean\ verificacaoMesmaPosicao(Casa)
comment2.text=\r\n\ @param\ casaVerificacao\ Uma\ casa\ para\ a\ verifica\u00E7\u00E3o\r\n\ @return\ se\ uma\ casa\ dada\ como\ par\u00E2metro\ tem\ a\ mesma\ posi\u00E7\u00E3o.\r\n
comment3.params=
comment3.target=int\ getX()
comment3.text=\r\n\ @return\ a\ posi\u00E7\u00E3o\ X\ da\ casa\r\n
comment4.params=
comment4.target=int\ getY()
comment4.text=\r\n\ @return\ a\ posi\u00E7\u00E3o\ Y\ da\ casa\r\n
comment5.params=peca
comment5.target=void\ colocarPeca(Peca)
comment5.text=\r\n\ @param\ peca\ a\ Peca\ a\ ser\ posicionada\ nesta\ casa.\r\n
comment6.params=
comment6.target=void\ removerPeca()
comment6.text=\r\n\ Remove\ a\ pe\u00E7a\ posicionada\ nesta\ casa,\ se\ houver.\r\n
comment7.params=
comment7.target=Peca\ getPeca()
comment7.text=\r\n\ @return\ a\ Peca\ posicionada\ nesta\ Casa,\ ou\ Null\ se\ a\ casa\ estiver\ livre.\r\n
comment8.params=
comment8.target=boolean\ possuiPeca()
comment8.text=\r\n\ @return\ true\ se\ existe\ uma\ pe\u00E7a\ nesta\ casa,\ caso\ contrario\ false.\r\n
numComments=9

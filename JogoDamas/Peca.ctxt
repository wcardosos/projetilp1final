#BlueJ class context
comment0.target=Peca
comment1.params=casa\ tipo\ direcao
comment1.target=Peca(Casa,\ int,\ int)
comment10.params=casaPecaAdversaria\ casaEliminacao
comment10.target=void\ analisaEliminacoes(Casa,\ Casa)
comment10.text=\r\n\ @param\ casaPecaAdversaria\ Casa\ em\ uma\ das\ adjac\u00EAncias\ da\ pe\u00E7a.\r\n\ @param\ casaEliminacao\ Casa\ a\ qual\ uma\ pe\u00E7a\ pode\ ir\ ap\u00F3s\ uma\ poss\u00EDvel\ elimina\u00E7\u00E3o.\r\n\ Analisa\ se\ em\ casaPecaAdversaria\ possui\ uma\ pe\u00E7a\ advers\u00E1ria\ e\ se\ a\ casa\ ap\u00F3s\ uma\ poss\u00EDvel\ elimina\u00E7\u00E3o\r\n\ est\u00E1\ vazia.\ Se\ estiver\ vazia,\ adiciona\ a\ casa\ ao\ ArrayList\ de\ posi\u00E7\u00F5es\ poss\u00EDveis.\r\n
comment11.params=tabuleiro
comment11.target=void\ verificaEliminacao(Tabuleiro)
comment11.text=\r\n\ @param\ tabuleiro\ Tabuleiro\ do\ jogo\ para\ fazer\ as\ verifica\u00E7\u00F5es.\r\n\ Verifica\ nas\ adjac\u00EAncias\ da\ pe\u00E7a\ (de\ acordo\ com\ as\ regras\ do\ jogo\ de\ damas)\ se\ h\u00E1\ a\ possibilidade\r\n\ de\ elimina\u00E7\u00E3o\ de\ uma\ pe\u00E7a\ advers\u00E1ria,\ utilizando\ o\ m\u00E9todo\ analisaEliminacoes.\r\n
comment12.params=destino
comment12.target=Casa\ casaParaEliminar(Casa)
comment12.text=\r\n\ @param\ destino\ Casa\ para\ onde\ a\ pe\u00E7a\ ir\u00E1\ ap\u00F3s\ a\ elimina\u00E7\u00E3o\r\n\ Define\ qual\ pe\u00E7a\ advers\u00E1ria\ deve\ ser\ eliminada.\r\n
comment13.params=tabuleiro
comment13.target=void\ eliminacaoSucessiva(Tabuleiro)
comment13.text=\r\n\ @param\ tabuleiro\ Tabuleiro\ para\ o\ par\u00E2metro\ do\ m\u00E9todo\ verificaEliminacao.\r\n\ Verifica\ se\ podem\ ser\ feitas\ elimina\u00E7\u00F5es\ sucessivas.\r\n
comment14.params=
comment14.target=void\ setEliminacaoSucessiva()
comment14.text=\r\n\ Define\ o\ valor\ de\ eliminacaoSucessiva.\r\n
comment15.params=
comment15.target=boolean\ getEliminacaoSucessiva()
comment15.text=\r\n\ @return\ eliminacaoSucessiva\ Retorna\ se\ a\ pe\u00E7a\ pode\ fazer\ elimina\u00E7\u00F5es\ sucessivas.\r\n
comment16.params=
comment16.target=int\ getDirecao()
comment16.text=\r\n\ @return\ direcao\ Retorna\ a\ direcao\ da\ pe\u00E7a.\r\n
comment17.params=destinoEliminacao
comment17.target=boolean\ verificaCasaEliminacao(Casa)
comment17.text=\r\n\ @return\ boolean\ Retorna\ true\ se\ uma\ pe\u00E7a\ dada\ como\ par\u00E2metro\ est\u00E1\ no\ ArrayList\ de\ posi\u00E7\u00F5es\ poss\u00EDveis\ ap\u00F3s\ a\ elimina\u00E7\u00E3o.\r\n
comment18.params=
comment18.target=void\ verificaDama()
comment18.text=\r\n\ Verifica\ se\ a\ pe\u00E7a\ chegou\ numa\ posi\u00E7\u00E3o\ para\ virar\ dama.\ Se\ a\ peca\ j\u00E1\ for\ dama,\ ela\ vira\ uma\ pe\u00E7a\ simples.\r\n
comment19.params=pos
comment19.target=boolean\ limite(int)
comment19.text=\r\n\ @param\ pos\ Posi\u00E7\u00E3o\ dada\ para\ a\ verifica\u00E7\u00E3o\r\n\ Verifica\ se\ uma\ posi\u00E7\u00E3o\ dada\ est\u00E1\ dentro\ das\ posi\u00E7\u00F5es\ do\ tabuleiro.\r\n\ Se\ estiver\ retorna\ true;\ false\ caso\ o\ contr\u00E1rio.\r\n
comment2.params=destino
comment2.target=void\ mover(Casa)
comment2.text=\r\n\ Movimenta\ a\ pe\u00E7a\ para\ uma\ nova\ casa.\r\n\ @param\ destino\ Nova\ casa\ que\ ir\u00E1\ conter\ esta\ peca.\r\n
comment3.params=
comment3.target=int\ getTipo()
comment3.text=\r\n\ Valor\ \ \ \ Tipo\r\n\ \ \ 0\ \ \ Branca\ (Pedra)\r\n\ \ \ 1\ \ \ Branca\ (Dama)\r\n\ \ \ 2\ \ \ Vermelha\ (Pedra)\r\n\ \ \ 3\ \ \ Vermelha\ (Dama)\r\n\ @return\ o\ tipo\ da\ peca.\r\n
comment4.params=
comment4.target=void\ setDama()
comment4.text=\r\n\ Define\ o\ valor\ para\ o\ atributo\ dama.\r\n\ Se\ o\ valor\ de\ dama\ for\ falso,\ vira\ verdadeiro\ e\ muda\ seu\ tipo;\r\n\ Se\ for\ verdadeiro,\ vira\ false\ e\ muda\ seu\ tipo;\r\n\ Ap\u00F3s\ a\ verifica\u00E7\u00E3o\ de\ dama,\ muda-se\ a\ dire\u00E7\u00E3o\ da\ pe\u00E7a.\r\n
comment5.params=
comment5.target=boolean\ getDama()
comment5.text=\r\n\ @return\ dama\ Retorna\ o\ valor\ de\ dama.\r\n
comment6.params=
comment6.target=boolean\ existeEliminacao()
comment6.text=\r\n\ @return\ boolean\ Retorna\ true\ se\ h\u00E1\ pe\u00E7as\ para\ elimina\u00E7\u00E3o,\ false\ se\ o\ contr\u00E1rio.\r\n
comment7.params=casa
comment7.target=void\ adicionaPosicao(Casa)
comment7.text=\r\n\ Adiciona\ uma\ casa\ onde\ a\ pe\u00E7a\ pode\ ir\ ap\u00F3s\ uma\ elimina\u00E7\u00E3o.\r\n
comment8.params=destino
comment8.target=boolean\ movimentoSimples(Casa)
comment8.text=\r\n\ @param\ destino\ Casa\ para\ onde\ se\ quer\ fazer\ o\ movimento.\r\n\ @return\ podeMover\ Retorna\ se\ um\ de\ movimenta\u00E7\u00E3o\ simples\ pode\ ser\ feito.\r\n
comment9.params=
comment9.target=void\ limpaPosicoesPossiveis()
comment9.text=\r\n\ Limpa\ o\ ArrayList\ que\ cont\u00E9m\ as\ posi\u00E7\u00F5es\ que\ a\ pe\u00E7a\ pode\ se\ mover\ ap\u00F3s\ uma\ elimina\u00E7\u00E3o.\r\n
numComments=20
